@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Admin Functions
            </a>
            <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                <li><a class="dropdown-item" asp-area="" asp-controller="AdminTags" asp-action="Add">Add Tag</a></li>
                <li><a class="dropdown-item" asp-area="" asp-controller="AdminTags" asp-action="List">List Of All Tags</a></li>
                <li><a class="dropdown-item" asp-area="" asp-controller="AdminBlogPosts" asp-action="Add">Add Blog Post</a></li>
                <li><a class="dropdown-item" asp-area="" asp-controller="AdminBlogPosts" asp-action="List">List Of All Blog Post</a></li>
            </ul>
        </li>

        <li class="nav-item">
            <form id="logoutForm" asp-controller="Account" asp-action="Logout" method="post" class="form-inline">
               
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" href="/Account/login">Login</a>
        </li>
    }
</ul>
